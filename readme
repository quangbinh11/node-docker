docker build -t node-app-image

docker run -d --name node-app node-app-image

docker rm node-app -f

docker run -p 3000:3000 -d --name node-app node-app-image

docker exec -it node-app bash

docker ps -a

docker run -v C:\study\nodejs\node-docker:/app -v /app/node_modules -p 3000:3000 -d --name node-app node-app-image

docker run -v C:\study\nodejs\node-docker:/app:ro -v /app/node_modules -p 3000:3000 -d --name node-app node-app-image

docker run -v C:\study\nodejs\node-docker:/app:ro -v /app/node_modules --env PORT=4000 -p 3000:4000 -d --name node-app node-app-image

docker run -v C:\study\nodejs\node-docker:/app:ro -v /app/node_modules --env-file ./.env -p 3000:4000 -d --name node-app node-app-image

printenv

docker volume ls
docker volume prune

docker-compose up -d
docker-compose down -v

docker-compose -f .\docker-compose.yaml -f .\docker-compose.dev.yml up -d --build
docker-compose -f .\docker-compose.yaml -f .\docker-compose.dev.yml down -v

docker exec -it node-docker_mongo_1  mongo -u "sanjeev" -p "mypassword"

docker logs node-docker_node-app_1 -f

docker network ls

-- redis --
docker-compose -f .\docker-compose.yaml -f .\docker-compose.dev.yml up -d --build -V

docker exec -it node-docker_redis_1 redis-cli

docker-compose -f .\docker-compose.yaml -f .\docker-compose.dev.yml up -d --scale node-app=2







